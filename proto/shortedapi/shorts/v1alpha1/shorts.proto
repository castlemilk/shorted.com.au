syntax = "proto3";

package shorts.v1alpha1;

option go_package = "github.com/castlemilk/shorted.com.au/services/gen/proto/go/shorts/v1alpha1;shortsv1alpha1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "stocks/v1alpha1/stocks.proto";

service ShortedStocksService {
  // Shows top 10 short positions on the ASX over different periods of time.
  rpc GetTopShorts (GetTopShortsRequest) returns (GetTopShortsResponse);

  rpc GetIndustryTreeMap(GetIndustryTreeMapRequest) returns (stocks.v1alpha1.IndustryTreeMap);
  // Provides an overview of a specific stock based on PRODUCT_CODE.
  rpc GetStock (GetStockRequest) returns (stocks.v1alpha1.Stock);
  // Provides a more in-depth breakdown of a particular stock's metadata.
  rpc GetStockDetails (GetStockDetailsRequest) returns (stocks.v1alpha1.StockDetails);
  // fetch time series data for a specific stock
  rpc GetStockData (GetStockDataRequest) returns (stocks.v1alpha1.TimeSeriesData);
}

// Request for Top10 RPC, specifying the period of time.
message GetTopShortsRequest {
  string period = 1;
  int32 limit = 2;
  int32 offset = 3;
}

// Request for Top10 RPC, specifying the period of time.
message GetIndustryTreeMapRequest {
  // time over which to look at the max value
  string period = 1;
  // number of stocks to return for each parent
  int32 limit = 2;
}

// Response for Top10 RPC, including time series data for each of the top 10 short positions.
message GetTopShortsResponse {
  repeated stocks.v1alpha1.TimeSeriesData time_series = 1;
  int32 offset = 2;
}

// Request for GetStockSummary RPC, specifying the product code.
message GetStockRequest {
  string product_code = 1;
}

// Request for GetStockDetails RPC, specifying the product code.
message GetStockDetailsRequest {
  string product_code = 1;
}

// Request for GetStockDataRequest RPC, specifying the product code.
message GetStockDataRequest {
  string product_code = 1;
  string period = 2;
}