service: management
custom:
  tableName: Users
 
provider:
  name: aws
  runtime: go1.x
  region: ap-southeast-2 	

  ecr:
    # In this section you can define images that will be built locally and uploaded to ECR
    images:
      appimage:
        path: ../../..
        file: ./management/cmd/lambda/Dockerfile
 
functions:
  management:
    image: 299413881343.dkr.ecr.ap-southeast-2.amazonaws.com/bedrock-management:latest
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true
    role: LambdaDynamoDBRole
    environment:
      APP_STORE_BACKEND: dynamodb
      APP_STORE_DYNAMODB_TABLE: ${self:custom.tableName}

resources:
  Resources:
    LambdaDynamoDBRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: LambdaDynamoDBPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:Scan
                    - dynamodb:Query
                    - dynamodb:UpdateItem
                    - dynamodb:DeleteItem
                  Resource: 'arn:aws:dynamodb:*:*:table/${self:custom.tableName}'
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: '${self:custom.tableName}'
        AttributeDefinitions:
          -
            AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          -
            AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1